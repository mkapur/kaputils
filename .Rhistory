width = 7,
height = 5,
units = 'in',
dpi = 720
)
}
## save one-page PDF
ml <- gridExtra::marrangeGrob(selp, nrow=pdfrows, ncol=pdfcols)
## non-interactive use, multipage pdf
ggplot2::ggsave(
paste0( mods[m], "/Selex_all.pdf"),
ml,
width = 8.5,
height = 11,
units = 'in'
)
graphics.off()
cat("saved plot to ", paste0(rootdir, "/plots/Selex_all.pdf"), "\n")
cat("set plotloc or change working dir if needed", "\n")
} ## end loop mods
} ## end function
## not run:
# plotInputSel(
#   rootdir = "G:/MAKO/mako_sim",
#   pattern = NA,
#   year = 2016,
#   lmin = 35,
#   lmax = 350,
#   linc = 5,
# pdfrows = 3,
# pdfcols = 2
# )
plotInputSel(rootdir = "C:/users/mkapur/dropbox/HAKEBOOT/",
pattern = "HAKE_",
plotloc = "C:/users/mkapur/dropbox/HAKEBOOT/plots/",
year = 2016,
lmin = 0,
lmax = 50,
linc = 5,
seltype = c('age','length')[2],
pdfrows = 2,
pdfcols = 2)
warnings()
devtools::load_all(".")
SPRseries <- read.csv("C:/Users/Maia Kapur/Dropbox/UW/sab-growth/iPopSim/genData/Fsim.csv")
saveplot = T
mods = NA
plotloc = NA
pdfrows = 4
pdfcols = 2
if (sum(is.na(mods)) == 0) {
SPRseries0 <-
SPRseries[SPRseries$MOD %in% mods, ]
} else{
SPRseries0 <- SPRseries
}
SPRseries0
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(11, name = 'Spectral'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
require(dplyr)
require(gpglot2)
require(gglot2)
require(ggplot2)
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(11, name = 'Spectral'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
require(RColorBrewer)
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(11, name = 'Spectral'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
summary(SPRseries)
class(SPRseries$F_std)
class(SPRseries$Year)
SPRseries$Year <- as.numeric(SPRseries$Year)
if (sum(is.na(mods)) == 0) {
SPRseries0 <-
SPRseries[SPRseries$MOD %in% mods, ]
} else{
SPRseries0 <- SPRseries
}
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(11, name = 'Spectral'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
class(SPRseries0$Year)
head(SPRseries0)
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(11, name = 'Spectral'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
SPRseries0$MOD <- as.factor(SPRseries0$MOD)
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(11, name = 'Spectral'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
devtools::load_all(".")
devtools::load_all(".")
plotF <- function(SPRseries,
saveplot = T,
pal = 'Spectral',
mods = NA,
plotloc = NA,
pdfrows = 4,
pdfcols = 2) {
# if(saveplot)jpeg(  paste0(plotloc, "F_Trajectory.jpg"), width = 8, height = 5, unit = 'in', res = 1020)
if (is.na(plotloc)) {
if (!exists(paste0(getwd(), "/plots/"))) {
dir.create(paste0(getwd(), "/plots/"))
}
plotloc <- paste0(getwd(), "/plots/")
}
if (sum(is.na(mods)) == 0) {
SPRseries0 <-
SPRseries[SPRseries$MOD %in% mods, ]
} else{
SPRseries0 <- SPRseries
}
if(length(unique(SPRseries0$MOD)) <= 5){
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(11, name = pal), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
} else if(length(unique(SPRseries0$MOD))> 5){
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = 'none'
) +
scale_color_manual(values = rep(brewer.pal(11, name = pal), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
}
if (saveplot == T) {
ggplot2::ggsave(
paste0(plotloc, "/F_Trajectory.jpeg"),
plot = last_plot(),
path = NULL,
scale = 1,
width = 7,
height = 5,
units = "in",
dpi = 1020,
limitsize = TRUE
)
ggplot2::ggsave(
paste0(plotloc, "/F_Trajectory.pdf"),
plot = last_plot(),
path = NULL,
scale = 1,
width = 7,
height = 5,
units = "in",
dpi = 1020,
limitsize = TRUE
)
}
cat('saved plot with model(s)',
mods,
" to ",
paste0(plotloc, "F_Trajectory.jpg"),
"\n")
cat("set plotloc or change working dir if needed", "\n")
}
devtools::load_all(".")
?brewer.pal
display.brewer.all()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(lattice)
require(dplyr)
require(purrr)
library(RColorBrewer)
require(tidyr)
require(ggplot2)
# devtools::install_github("mkapur/kaputils")
# install.packages( "c:/users/maia kapur/dropbox/kaputils",  repos = NULL, type = "source", dependencies = T)
library(kaputils)
rm(list = ls())
fLevs <- read.csv('inputs/scenarios.csv',na.strings = 'NA') ## manual file
setwd("C:/Users/Maia Kapur/Dropbox/UW/sab-growth/gam")
source("./makeMod.R");source("./getBreaks.R")
fLevs <- read.csv('C:/Users/Maia Kapur/Dropbox/UW/sab-growth/iPopSim/inputs/scenarios.csv',na.strings = 'NA') ## manual file
for(l in 30:37){
## get scenario name
scen0 <- paste0(fLevs[l,'DESC'])
scen1 <-  ifelse(is.na(fLevs[l, 5]),
paste(fLevs[l, 3], fLevs[l, 4], sep = "_"),
paste(fLevs[l, 3], fLevs[l, 4], fLevs[l, 5],  sep = "_"))
scen <- paste(scen0,scen1,sep = "_")
dat <-read.csv(paste0("C:/users/maia kapur/dropbox/uw/sab-growth/ipopsim/gendata/",
scen,'.csv'))
mod <- makeMod(scen,dat)
getBreaks(mod,dat, scen)
}
require(mgcv)
for(l in 30:37){
## get scenario name
scen0 <- paste0(fLevs[l,'DESC'])
scen1 <-  ifelse(is.na(fLevs[l, 5]),
paste(fLevs[l, 3], fLevs[l, 4], sep = "_"),
paste(fLevs[l, 3], fLevs[l, 4], fLevs[l, 5],  sep = "_"))
scen <- paste(scen0,scen1,sep = "_")
dat <-read.csv(paste0("C:/users/maia kapur/dropbox/uw/sab-growth/ipopsim/gendata/",
scen,'.csv'))
mod <- makeMod(scen,dat)
getBreaks(mod,dat, scen)
}
require(dplyr)
for(l in 30:37){
## get scenario name
scen0 <- paste0(fLevs[l,'DESC'])
scen1 <-  ifelse(is.na(fLevs[l, 5]),
paste(fLevs[l, 3], fLevs[l, 4], sep = "_"),
paste(fLevs[l, 3], fLevs[l, 4], fLevs[l, 5],  sep = "_"))
scen <- paste(scen0,scen1,sep = "_")
dat <-read.csv(paste0("C:/users/maia kapur/dropbox/uw/sab-growth/ipopsim/gendata/",
scen,'.csv'))
mod <- makeMod(scen,dat)
getBreaks(mod,dat, scen)
}
fdf <- read.csv("C:/Users/MKapur/Dropbox/UW/sab-growth/iPopSim/genData/Fsim.csv"))
fdf <- read.csv("C:/Users/MKapur/Dropbox/UW/sab-growth/iPopSim/genData/Fsim.csv")
SPRseries = fdf
SPRseries <- fdf %>% filter(MOD %in% floor(runif(6,1,35)) & boot == 1)
require(dplyr)
SPRseries <- fdf %>% filter(MOD %in% floor(runif(6,1,35)) & boot == 1)
plotloc = "C:/Users/MKapur/Dropbox/UW/sab-growth/iPopSim/plots")
plotloc = "C:/Users/MKapur/Dropbox/UW/sab-growth/iPopSim/plots"
mods = NA
pdfrows = 4
pdfcols = 2
if (is.na(plotloc)) {
if (!exists(paste0(getwd(), "/plots/"))) {
dir.create(paste0(getwd(), "/plots/"))
}
plotloc <- paste0(getwd(), "/plots/")
}
if (sum(is.na(mods)) == 0) {
SPRseries0 <-
SPRseries[SPRseries$MOD %in% mods, ]
} else{
SPRseries0 <- SPRseries
}
SPRseries0
if(length(unique(SPRseries0$MOD)) <= 5){
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
} else if(length(unique(SPRseries0$MOD))> 5){
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = 'none'
) +
scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
}
require(ggplot2)
if(length(unique(SPRseries0$MOD)) <= 5){
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
} else if(length(unique(SPRseries0$MOD))> 5){
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = 'none'
) +
scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
}
require(RColorBrewer)
if (sum(is.na(mods)) == 0) {
SPRseries0 <-
SPRseries[SPRseries$MOD %in% mods, ]
} else{
SPRseries0 <- SPRseries
}
if(length(unique(SPRseries0$MOD)) <= 5){
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
} else if(length(unique(SPRseries0$MOD))> 5){
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = 'none'
) +
scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
}
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
head(SPRseries0)
class(SPRseries0$MOD)
SPRseries0$MOD <- as.factor(SPRseries0$MOD)
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
theme_bw() +
theme(
panel.grid = element_blank(),
panel.border = element_blank(),
axis.text = element_text(size = rel(1)),
axis.title = element_text(size = rel(1)),
legend.position = c(0.9, 0.80),
legend.background = element_rect(fill = NA, colour = NA),
legend.key = element_blank(),
legend.text = element_text(size = rel(1)),
legend.title = element_blank()
) +
scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
ylab("F_Std") +
xlab("Year") +
geom_line(lwd = 1.1)
SPRseries0 %>% ggplot(., aes(x = Year, y = F_std, col = MOD)) +
# theme_bw() +
# theme(
#   panel.grid = element_blank(),
#   panel.border = element_blank(),
#   axis.text = element_text(size = rel(1)),
#   axis.title = element_text(size = rel(1)),
#   legend.position = c(0.9, 0.80),
#   legend.background = element_rect(fill = NA, colour = NA),
#   legend.key = element_blank(),
#   legend.text = element_text(size = rel(1)),
#   legend.title = element_blank()
# ) +
# scale_color_manual(values = rep(brewer.pal(9, name = 'Greys'), length(unique(SPRseries0$MOD)))) +
# ylab("F_Std") +
# xlab("Year") +
geom_line(lwd = 1.1)
unique(SPRseries0$MOD)
hist(rnorm(380,0.25))
hist(rnorm(100,380,0.25))
hist(rnorm(100,380,2.5))
hist(rnorm(100,380,10))
hist(rnorm(1000,380,10))
