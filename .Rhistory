CoVar <- read.table(paste0(subdirs[s],"/covar.sso"),header=TRUE,colClasses=c(rep("numeric",4),rep("character",4),"numeric"))
CoVar <- read.table(paste0(subdirs[s],"/covar.sso"),header=TRUE)
mtemp <- subdirs[s] %>%
SS_output(.,
covar = F,
covarfile = "covar.sso",
forecast = F,
ncols = 1000)
mtemp$install.packages("remotes")
remotes::install_github("r4ss/r4ss")
require(r4ss)
rootdir =   "C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/";
terminal_year = 2016;
suffix = "EM_E2";
pattern = "OM";
subpattern = "*SpaceLast";
writeTables = T
devtools::load_all(".")
suff <- ifelse(is.na(suffix), ifelse(is.na(subpattern), pattern, subpattern), suffix)
## iterate avail. runs
if (!is.na(pattern)) {
mods <- list.dirs(rootdir, recursive = F, full.names = T) %>%
.[grepl(pattern, .)]
}  else{
mods <- rootdir
}
# refList = data.fra
m = 1
s = 2
## loop into master file
modname <- sub('.*\\/', '', mods)[m]
## use SS_output function to extract quantities
subdirs <- mods[m] %>%
list.dirs(., recursive = T) %>%
.[grepl(subpattern, .)] %>%
.[!grepl("plots", .)]
IDX <-  basename(subdirs)[s]
sIDX <- sIDX + 1 ## will be one for first succesful hit
## pull out rep based on file name
splitpath0 <- strsplit(subdirs[s], "/")[[1]]
splitpath1 <- splitpath0[grep('Rep', splitpath0)]
splitpath2 <-  sub("Rep*", "", splitpath1)
splitpath <- ifelse(length(splitpath2) > 1, splitpath2[2], splitpath)
mtemp <- subdirs[s] %>%
SS_output(.,
covar = F,
covarfile = "covar.sso",
forecast = F,
ncols = 1000)
mtemp$derived_quants
mtemp <- subdirs[s] %>%
SS_output(.,
covar = T,
covarfile = "covar.sso",
forecast = F,
ncols = 1000)
mtemp$derived_quants
mtemp <- subdirs[s] %>%
SS_output(.,
covar = T,
covarfile = "covar.sso",
NoCompOK = TRUE,
forecast = F,
ncols = 1000)
mtemp$derived_quants
mtemp <- subdirs[s] %>%
SS_output(., NoCompOK = TRUE, forecast = FALSE)
subdirs[s]
mtemp
mtemp$derived_quants
s = 2
subdirs[s]
subdirs
mtemp <- subdirs[s] %>%
SS_output(., NoCompOK = TRUE, forecast = FALSE)
s = 4
mtemp <- subdirs[s] %>%
SS_output(., NoCompOK = TRUE, forecast = FALSE)
mtemp
mtemp$derived_quants
library(r4ss)
devtools::load_all(".")
rootdir =   "C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/";
terminal_year = 2016;
suffix = "EM_E2";
pattern = "OM";
subpattern = "*SpaceLast";
writeTables = T
## iterate avail. runs
if (!is.na(pattern)) {
mods <- list.dirs(rootdir, recursive = F, full.names = T) %>%
.[grepl(pattern, .)]
}  else{
mods <- rootdir
}
m = 1; s = 4
## loop into master file
modname <- sub('.*\\/', '', mods)[m]
## use SS_output function to extract quantities
subdirs <- mods[m] %>%
list.dirs(., recursive = T) %>%
.[grepl(subpattern, .)] %>%
.[!grepl("plots", .)]
subdirs
IDX <-  basename(subdirs)[s]
sIDX <- sIDX + 1 ## will be one for first succesful hit
## pull out rep based on file name
splitpath0 <- strsplit(subdirs[s], "/")[[1]]
splitpath1 <- splitpath0[grep('Rep', splitpath0)]
splitpath2 <-  sub("Rep*", "", splitpath1)
splitpath <- ifelse(length(splitpath2) > 1, splitpath2[2], splitpath)
mtemp <- subdirs[s] %>%
SS_output(., NoCompOK = TRUE, forecast = FALSE)
mtemp$derived_quants
subdirs[s] <- "C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/sample324/EMRep1_SpaceFirst/correct"
SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/sample324/EMRep1_SpaceFirst/correct", NoCompOK = TRUE, forecast = FALSE)
mtemp =SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/sample324/EMRep1_SpaceFirst/correct", NoCompOK = TRUE, forecast = FALSE)
mtemp$derived_quants
mtemp = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceFirst/correct",
NoCompOK = TRUE, forecast = FALSE)
mtemp$derived_quants
s = 2
subdirs[s]
mtemp <- subdirs[s] %>%
SS_output(., NoCompOK = TRUE, forecast = FALSE)
mtemp$derived_quants
# ubdirs[s] %>%
mtemp <-   SS_output(subdirs[s], NoCompOK = TRUE, forecast = FALSE)
mtemp$derived_quants
subdirs[s]
class(subdirs[s])
class("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceFirst/correct")
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceFirst/correct",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw$derived_quants
# ubdirs[s] %>%
mtemp <-   SS_output(paste(subdirs[s]),
NoCompOK = TRUE, forecast = FALSE)
mtemp$derived_quants
mtemp_raw$derived_quants
subdirs[s]
paste(subdirs[s])
# ubdirs[s] %>%
mtemp <-   SS_output(paste(subdirs[s]), covar = paste0(subdirs[s],"/covar.sso")
NoCompOK = TRUE, forecast = FALSE)
# ubdirs[s] %>%
mtemp <-   SS_output(paste(subdirs[s]), covar = paste0(subdirs[s],"/covar.sso"),
NoCompOK = TRUE, forecast = FALSE)
# ubdirs[s] %>%
mtemp <-   SS_output(paste(subdirs[s]), covarfile  = paste0(subdirs[s],"/covar.sso"),
NoCompOK = TRUE, forecast = FALSE)
mtemp$derived_quants
subdirs[s]
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/sample324",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw$derived_quants
allDirs <- list.files("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/")
allDirs
allDirs <- list.dirs("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/")
allDirs
last(allDirs)
allDirs <- list.dirs("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/")
mtemp_list <- SS_output(last(allDirs),
NoCompOK = TRUE, forecast = FALSE)
mtemp_list$derived_quants ## looks goodf
class(last(allDirs))
allDirs[2]
allDirs
subdirs
mtemp_list <- SS_output(last(subdirs),
NoCompOK = TRUE, forecast = FALSE) ## runs
mtemp_list$derived_quants ## looks goodf
subdirs <- mods[m] %>%
list.dirs(., recursive = T)
subdirs
mtemp_list <- SS_output(last(subdirs),
NoCompOK = TRUE, forecast = FALSE) ## runs
mtemp_list$derived_quants ## looks goodf
class(subdirs)
subdirs <- mods[m] %>%
list.dirs(., recursive = T) %>%
.[grepl(subpattern, .)]
class(subdirs)
mtemp_list <- SS_output(last(subdirs),
NoCompOK = TRUE, forecast = FALSE) ## runs
mtemp_list$derived_quants ## looks goodf
subdirs <- mods[m] %>%
list.dirs(., recursive = T)
mtemp_list <- SS_output(last(subdirs),
NoCompOK = TRUE, forecast = FALSE) ## runs
mtemp_list$derived_quants ## looks goodf
subdirs <-  subdirs %>%
.[grepl(subpattern, .)] %>%
.[!grepl("plots", .)]
mtemp_list <- SS_output(last(subdirs),
NoCompOK = TRUE, forecast = FALSE) ## runs
## use SS_output function to extract quantities
subdirs <- mods[m] %>%
list.dirs(., recursive = T)
s
subdirs[s]
## use SS_output function to extract quantities
subdirs0<- mods[m] %>%
list.dirs(., recursive = T)
subdirs <-  subdirs0 %>%
.[grepl(subpattern, .)] %>%
.[!grepl("plots", .)]
last(subdirs)
last(subdirs0)
mtemp_list <- SS_output(last(subdirs0),
NoCompOK = TRUE, forecast = FALSE) ## runs
mtemp_list$derived_quants ## looks goodf
subdirs
mtemp_list <- SS_output(subdirs[48],
NoCompOK = TRUE, forecast = FALSE) ## runs
mtemp_list$derived_quants ## looks goodf
mtemp_list <- SS_output(paste0(subdirs[48],"/")
NoCompOK = TRUE, forecast = FALSE) ## runs
mtemp_list <- SS_output(paste0(subdirs[48],"/"),
NoCompOK = TRUE, forecast = FALSE) ## runs
subdirs
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/EMRep23_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw$derived_quants ## looks good
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/EMRep23_SpaceLast/correct/",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw$derived_quants ## looks good
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/EMRep1_SpaceLast/correct/",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/sample324",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw$derived_quants ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/EMRep1_SpaceLast/correct/",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/EMRep1_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/EMRep1_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE, covarfile = "covar.sso")
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE, covarfile = "covar.sso")
mtemp_raw2 = SS_output("C:/Users/mkapur/Downloads/EMRep5_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE, covarfile = "covar.sso")
require(r4ss)
tt <- SS_output("C:/Users/mkapur/Dropbox/UW/ms_diags/MK_Plots_Diags/ASPMII")
tt$derived_quants
mtemp_raw2 = SS_output("C:/Users/mkapur/Downloads/EMRep5_SpaceLast/correct"
)
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE, covarfile = "covar.sso")
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/sample324"),
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31//OMRep1/sample324")
head(mtemp_raw$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceLast/correct"
)
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE, covarfile = "ss3.cor")
tt <- SS_output("C:/Users/mkapur/Dropbox/UW/sneak_dep/OM1/True/1")
head(tt$derived_quants)
tt <- SS_output("C:/Users/mkapur/Dropbox/UW/sneak_dep/runs/v2_runs/2020-02-21/OMRep2/EMRep2/correct")
head(tt$derived_quants)
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/sample324",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/sample3242",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep4_SpaceFirst2/EMRep4_SpaceFirst/correct",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep4_SpaceFirst2/correct",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep4_SpaceFirst/correct",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep5_SpaceFirst/correct",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceFirst/correct",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep1_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep5_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE)
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-03-31/OMRep1/EMRep12_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-04-01/OMRep47/EMRep1_SpaceLast/S",
NoCompOK = TRUE, forecast = FALSE)
head(mtemp_raw2$derived_quants) ## looks good
mtemp_raw2 = SS_output("C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-04-01/OMRep47/EMRep1_SpaceLast/correct",
NoCompOK = TRUE, forecast = FALSE)
subdirs
# kaputils:::extractResults(
rootdir =   "C:/Users/mkapur/Dropbox/UW/sneak/runs/2020-04-01/";
terminal_year = 2016;
suffix = "EM_E2";
pattern = "OM";
subpattern = "*SpaceLast";
writeTables = T
# )
suff <- ifelse(is.na(suffix), ifelse(is.na(subpattern), pattern, subpattern), suffix)
## iterate avail. runs
if (!is.na(pattern)) {
mods <- list.dirs(rootdir, recursive = F, full.names = T) %>%
.[grepl(pattern, .)]
}  else{
mods <- rootdir
}
devtools::load_all(".")
suff <- ifelse(is.na(suffix), ifelse(is.na(subpattern), pattern, subpattern), suffix)
## iterate avail. runs
if (!is.na(pattern)) {
mods <- list.dirs(rootdir, recursive = F, full.names = T) %>%
.[grepl(pattern, .)]
}  else{
mods <- rootdir
}
## if subpattern provided loop once more
sIDX <- 0
modname <- sub('.*///', '', mods)[m]
## use SS_output function to extract quantities
subdirs0 <- mods[m] %>%
list.dirs(., recursive = T)
subdirs <-  subdirs0 %>%
.[grepl(subpattern, .)] %>%
.[!grepl("plots", .)]
m=1
## loop into master file
modname <- sub('.*///', '', mods)[m]
## use SS_output function to extract quantities
subdirs <- mods[m] %>%
list.dirs(., recursive = T) %>%
.[grepl(subpattern, .)] %>%
.[!grepl("plots", .)]
subdirs
s = 3
IDX <-  basename(subdirs)[s]
sIDX <- sIDX + 1 ## will be one for first succesful hit
## pull out rep based on file name
splitpath0 <- strsplit(subdirs[s], "/")[[1]]
splitpath1 <- splitpath0[grep('Rep', splitpath0)]
splitpath2 <-  sub("Rep*", "", splitpath1)
splitpath <- ifelse(length(splitpath2) > 1, splitpath2[2], splitpath)
mtemp <-   SS_output(subdirs[s],
NoCompOK = TRUE, forecast = FALSE)
mtemp$derived_quants
mtemp$derived_quants %>%
select(Label, Value) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(!(Yr %in% mtemp$startyr:mtemp$endyr)) %>%
select(-Yr) %>%
pivot_wider(
.,
names_from = Label,
# id_cols = idcol,
values_from = Value
)
mtemp$derived_quants %>%
select(Label, Value) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(!(Yr %in% mtemp$startyr:mtemp$endyr))
mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label))
mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(!(Yr %in% mtemp$startyr:mtemp$endyr)) %>%
select(-Yr)
mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(!(Yr %in% mtemp$startyr:mtemp$endyr)) %>%
select(-Yr) %>%
pivot_wider(
.,
names_from = Label,
# id_cols = idcol,
values_from = Value
)
mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(!(Yr %in% mtemp$startyr:mtemp$endyr)) %>%
select(-Yr) %>%
pivot_wider(
.,
names_from = Label,
# id_cols = idcol,
values_from = Value
) %>%
mutate(
'Yr' = NA,
'MOD' = splitpath1[1],
"IDX" = IDX,
"REP" = splitpath
) %>%
select(-MOD, -REP, IDX, everything())
mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(Yr %in% mtemp$startyr:mtemp$endyr) %>%
# filter(!is.na(.$Year)) %>%
mutate(Label2 = gsub("_.*", "", Label)) %>%
pivot_wider(
.,
names_from = Label2,
id_cols = Yr,
values_from = Value
)
mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label))
mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(Yr %in% mtemp$startyr:mtemp$endyr)
## time series
mtq <- mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(Yr %in% mtemp$startyr:mtemp$endyr) %>%
# filter(!is.na(.$Year)) %>%
mutate(Label2 = gsub("_.*", "", Label) ) %>%
pivot_wider(
.,
names_from = Label2,
id_cols = Yr,
values_from = c(StdDev,Value)
) %>%
mutate('MOD' = splitpath2[1],
"IDX" = IDX,
"REP" = splitpath,
"RECDev" = mtemp$recruit$dev[mtemp$recruit$Yr%in% mtemp$startyr:mtemp$endyr ]) %>%
select(Yr, MOD, REP, IDX, everything()) %>%
merge(., refList, by.x = c('IDX'), by.y = c('IDX'), all.y = FALSE) %>%
mutate(Yr = Yr.x, MOD = MOD.x, REP = REP.x, IDX = IDX) %>%
select(-Yr.y, -Yr.x, -REP.y, -REP.x, -MOD.y, -MOD.x) %>%
select(Yr, MOD, IDX, REP, everything())
## REF POINTS
refList <-  mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(!(Yr %in% mtemp$startyr:mtemp$endyr)) %>%
select(-Yr) %>%
pivot_wider(
.,
names_from = Label,
# id_cols = idcol,
values_from = Value
) %>%
mutate(
'Yr' = NA,
'MOD' = splitpath1[1],
"IDX" = IDX,
"REP" = splitpath
) %>%
select(-MOD, -REP, IDX, everything())
## REF POINTS
refList <-  mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(!(Yr %in% mtemp$startyr:mtemp$endyr)) %>%
select(-Yr) %>%
pivot_wider(
.,
names_from = Label,
# id_cols = idcol,
values_from = c(StdDev,Value)
) %>%
mutate(
'Yr' = NA,
'MOD' = splitpath1[1],
"IDX" = IDX,
"REP" = splitpath
) %>%
select(-MOD, -REP, IDX, everything())
refList
## time series
mtq <- mtemp$derived_quants %>%
select(Label, Value,StdDev) %>%
mutate(Yr = gsub(".*_", "", Label)) %>%
filter(Yr %in% mtemp$startyr:mtemp$endyr) %>%
# filter(!is.na(.$Year)) %>%
mutate(Label2 = gsub("_.*", "", Label) ) %>%
pivot_wider(
.,
names_from = Label2,
id_cols = Yr,
values_from = c(StdDev,Value)
) %>%
mutate('MOD' = splitpath2[1],
"IDX" = IDX,
"REP" = splitpath,
"RECDev" = mtemp$recruit$dev[mtemp$recruit$Yr%in% mtemp$startyr:mtemp$endyr ]) %>%
select(Yr, MOD, REP, IDX, everything()) %>%
merge(., refList, by.x = c('IDX'), by.y = c('IDX'), all.y = FALSE) %>%
mutate(Yr = Yr.x, MOD = MOD.x, REP = REP.x, IDX = IDX) %>%
select(-Yr.y, -Yr.x, -REP.y, -REP.x, -MOD.y, -MOD.x) %>%
select(Yr, MOD, IDX, REP, everything())
head(mtq)
View(mtw)
View(mtq)
head(mtemp$derived_quants)
devtools::load_all(".")
